#+TITLE: Emacs VHDL Tools

[[https://github.com/csantosb/vhdl-tools/blob/master/LICENSE][file:http://img.shields.io/badge/license-GNU%20GPLv3-blue.svg]]
[[http://stable.melpa.org/#/vhdl-tools][file:http://stable.melpa.org/packages/vhdl-tools-badge.svg]]
[[http://melpa.org/#/vhdl-tools][file:http://melpa.org/packages/vhdl-tools-badge.svg]]

This project provides useful VHDL support for Emacs in terms of navigation and commands execution.

* Table of contents

 - [[#about][About]]
 - [[#install][Install]]
 - [[#use][Use]]
     - [[#headings][Headings]]
     - [[#custom-imenu][Custom Imenu]]
     - [[#jumping-around][Jimping around]]
 - [[#related-articles][Related utilities]]

* About

Vhdl-tools provide a minor mode intended to be used under [[https://guest.iis.ee.ethz.ch/~zimmi/emacs/vhdl-mode.html][vhdl-mode]].
It adds specific functionality on top of [[https://github.com/leoliu/ggtags][ggtags]], =imenu= and [[https://github.com/tj64/outshine][outshine]]
to ease navigating vhdl sources. It expects a working setup of =ggtags=,
completing it with

  - Jumping into instances
  - Jump to upper level
  - Searching for references
  - Link and headings management
  - Custom use of imenu

* Install

As usual: add to path and require after loading =vhdl-mode=

#+begin_src emacs-lisp
  (with-eval-after-load 'vhdl-mode
    (add-to-list 'load-path "...")
    (require 'vhdl-tools))
#+end_src

Then, activate the minor mode by completing the =vhdl-mode= hook.

#+begin_src emacs-lisp
  (add-hook 'vhdl-mode-hook
            (lambda ()
              (vhdl-tools-mode 1)))
#+end_src

* Use

** Headings

Following the status of the =vhdl-tools-use-outshine= flag (on by default),
when the mode is enabled, =vhdl-tools= will activate =outline-minor-mode=
locally and =outshine= globally, setting =vhdl-tools-outline-regexp= as the
regexp used to locate headings.

This enables using this kind of headings

#+begin_src example
  -- * Header Level 1

  -- ** Header Level 2
  MyInstance : MyComponent
      port map ( ...
#+end_src

to delimit code blocks.

The following keybinds are available to navigate headings

  + =C-c C-n=, get to next header
  + =C-c C-h=, get to previous header

** Custom Imenu

The following keybinds are made available to browse current buffer contents

  + =C-x c i m=  standard imenu
  + =C-x c i i=  instances
  + =C-x c i p=  processes
  + =C-x c i *=  headers
  + =C-x c i a=  all items

** Jumping around

The following keybinds are available

  + =C-c M-D=, jumps to the definition of symbol at point

    [[file:JumpDef.gif][JumpDef.gif]]

  + =C-c M-w=, stores a link
  + =C-c M-y=, pastes a link
  + =C-c M-j=, follows the link at point

    [[file:Links.gif][Links.gif]]

  + =C-c M-.=, jumps into the instance at point

    [[file:JumpIntoInstance.gif][JumpIntoInstance.gif]]

  + =C-c M-a=, moves point to first appearance of symbol at point

    [[file:JumpFirst.gif][JumpFirst.gif]]

  + =C-c M-u=, jumps to upper hierarchy level

    [[file:JumpUpper.gif][JumpUpper.gif]]

Cursor will jump to the target if there is one, searching packages too. The ring
mark is push after jumping, so to get back, press =C-c C-p= or M-, (default
binds under =ggtags=) if corresponding definition has been found. Works better
for files with correct syntax: think =vhdl-beautify-buffer= before using
=vhdl-tools=.

Also have a look at customization possibilities with =M-x customize-group vhdl-tools=.

* Related utilities

Some additional packages useful in this context might be

- [[https://github.com/mickeynp/smart-scan][Smart scan]]
- [[https://github.com/Malabarba/beacon][Beacon]]
- [[https://github.com/Malabarba/aggressive-indent-mode][Aggressive auto indent]]
